knitr::include_graphics("logoPUCP.png")
miLLAVE="Tb8cWCER3JfE3DzbFcesiriPnTwURPuuz7NWmvNU"
link="http://api.datosabiertos.oefa.gob.pe"
RQJSON="/api/v2/datastreams/"
GUID="ACTIV-AFA-36113"
FORMATO="/data.json/"
KEY="?auth_key="
request=paste0(link,RQJSON,GUID,FORMATO,KEY,miLLAVE) # La función paste0 la usamos para concatenar todos los elementos sin separador
request #mirala
library(jsonlite)
OEFA = fromJSON(request)
str(OEFA)
FORMATO='/data.pjson/'
request2=paste0(link,RQJSON,GUID,FORMATO,KEY,miLLAVE)
request2
OEFA = fromJSON(request2)
str(OEFA)
dataOEFA=data.frame(OEFA$result)
head(dataOEFA)
install.packages("rvest")
url1 = "https://en.wikipedia.org/wiki/Democracy_Index"
fullxpath1 = '/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[6]'
url1 = read_html(url1)
library(rvest)
url = "https://en.wikipedia.org/wiki/Democracy_Index"
fullxpath = '/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[5]'
url = read_html(url)
table = html_nodes(url, xpath= fullxpath)
table = html_table (table)
table =data.frame(table)
url1 = "https://en.wikipedia.org/wiki/Democracy_Index"
fullxpath1 = '/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[6]'
url1 = read_html(url1)
table = html_nodes(url1, xpath= fullxpath1)
table = html_table (table)
table =data.frame(table)
View(table)
url1 = "https://en.wikipedia.org/wiki/Democracy_Index"
fullxpath1 = '/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[6]'
url1 = read_html(url1)
table2 = html_nodes(url1, xpath= fullxpath1)
table2 = html_table (table2)
table2 =data.frame(table2)
View(table2)
url = "https://en.wikipedia.org/wiki/Democracy_Index"
fullxpath1 = '/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[6]'
url = read_html(url)
table2 = html_nodes(url, xpath= fullxpath1)
table2 = html_table (table2)
table2 =data.frame(table2)
View(table2)
View(table)
knitr::include_graphics("logoPUCP.png")
miLLAVE="Tb8cWCER3JfE3DzbFcesiriPnTwURPuuz7NWmvNU"
link="http://api.datosabiertos.oefa.gob.pe"
RQJSON="/api/v2/datastreams/"
GUID="ACTIV-AFA-36113"
FORMATO="/data.json/"
KEY="?auth_key="
request=paste0(link,RQJSON,GUID,FORMATO,KEY,miLLAVE) # La función paste0 la usamos para concatenar todos los elementos sin separador
request #mirala
library(jsonlite)
OEFA = fromJSON(request)
str(OEFA)
FORMATO='/data.pjson/'
request2=paste0(link,RQJSON,GUID,FORMATO,KEY,miLLAVE)
request2
OEFA = fromJSON(request2)
str(OEFA)
dataOEFA=data.frame(OEFA$result)
head(dataOEFA)
library(rvest)
url = "https://en.wikipedia.org/wiki/Democracy_Index"
fullxpath = '/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[5]'
url = read_html(url)
table = html_nodes(url, xpath= fullxpath)
table = html_table (table)
table =data.frame(table)
View(table)
View(table)
url = "https://en.wikipedia.org/wiki/Democracy_Index"
fullxpath1 = '/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[6]'
url = read_html(url)
table2 = html_nodes(url, xpath= fullxpath1)
table2 = html_table (table2)
table2 =data.frame(table2)
library(rvest)
url2="https://www.gob.pe/institucion/rree/funcionarios"
pagina_web=read_html(url2)
library(rio)
install.packages("rio")
library(rvest)
url2="https://www.gob.pe/institucion/rree/funcionarios"
pagina_web=read_html(url2)
library(rio)
export(table,"índice_democrasia.xlsx")
css_nombre="h3.text-2xl" # contenemos la clase CSS en un objeto
nombre_html <- html_nodes(pagina_web,css_nombre) # con html_nodes y html_text, obtenemos el código html que contiene los nombres
nombre_texto <- html_text(nombre_html)
head(nombre_texto) #vemos los datos
css_cargo="p"
cargo_html <- html_nodes(pagina_web,css_cargo)
cargo_texto <- html_text(cargo_html)
head(cargo_texto)
dataWS3 <- data.frame(NOMBRE = nombre_texto, CARGO = cargo_texto)
head(dataWS3)
url="https://www.gob.pe/institucion/mef/funcionarios"
pagina_web=read_html(url)
css_nombre="h3.text-2xl"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
css_cargo="p"
cargo_html <- html_nodes(pagina_web,css_cargo)
cargo_texto <- html_text(cargo_html)
dataWS5 <- data.frame(NOMBRE = nombre_texto, CARGO = cargo_texto)
head(dataWS5)
View(dataWS5)
url="https://www.gob.pe/institucion/mef/funcionarios?sheet="
css_cargo="p"
css_name="h3.text-2xl"
final_table = list() # list es una función para crear listas
setwd("C:/Users/Santiago/Downloads/trabajo_final")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Santiago/Downloads/trabajo_final")
library(rio)
data=import("Data_pais.xlsx")
data$asociados=NULL
data$poblacion=NULL
#Formato de las variables.
base <- na.omit(data)
sum(is.na(base))
names(base)
str(base)
dontselect=c("poblacion", "export")
select=setdiff(names(base),dontselect)
theData=base[,select]
library(polycor)
corMatrix=polycor::hetcor(theData)$correlations
library(ggcorrplot)
ggcorrplot(corMatrix)
library(rio)
data=import("Data_pais.xlsx")
data$asociados=NULL
#Formato de las variables.
base <- na.omit(data)
sum(is.na(base))
names(base)
str(base)
rcorr(as.matrix(base))
knitr::opts_chunk$set(echo = FALSE)
knitr::include_graphics("logoPUCP.png")
library(tidyverse)
library(rio)
data=import("Data_pais.xlsx")
base <- na.omit(data)
base
library(ggplot2)
library(ggthemes)
p=ggplot(base, aes(x=patentes, y=export)) + geom_point() +
geom_point(size=1.5, shape=23) +
geom_text(label=base$asociados, vjust=-0.5, hjust = 1,color="black", size=3) +
labs(title = "Exportaciones en miles de $ y Número de Patentes",
subtitle = "Exportaciones y patentes",
x = "Patentes",
y = "Exportaciones en miles de $") +
theme_fivethirtyeight()
p
library(rio)
data=import("Data_pais.xlsx")
library(sf)
mapWLD=sf::read_sf("world-administrative-boundaries.shp")
head(mapWLD)
mapMUN=merge(mapWLD,data,by.x='iso3',by.y='codigo', all.x = T)
library(ggplot2)
mapaleyendaL= ggplot(mapMUN)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data = mapMUN,
aes(fill=export),color = NA)
mapa3= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "#FDFEFE",  high = "blue", breaks=seq(from=0, to=61.25, by=20)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = c(0.16,0.1)) + labs(fill="export") + theme(legend.text = element_text(size = 10)) +
labs(title = "Distribución de las exportaciones chinas en el mundo", subtitle = "Exportaciones en miles de $") +
theme(
plot.title = element_text(color="black", size=15, face="bold"),
plot.caption = element_text(color = "black", size=10))
mapa3
library(rio)
data=import("Data_pais.xlsx")
data$codigo=NULL
data$asociados=NULL
#Formato de las variables.
base <- na.omit(data)
dontselect=c("export")
select=setdiff(names(base),dontselect)
theData=base[,select]
library(polycor)
corMatrix=polycor::hetcor(theData)$correlations
library(ggcorrplot)
ggcorrplot(corMatrix)
library(psych)
psych::KMO(corMatrix)
cortest.bartlett(corMatrix,n=nrow(theData))$p.value>0.05
library(matrixcalc)
is.singular.matrix(corMatrix)
fa.parallel(theData, fa = 'fa',correct = T,plot = F)
library(GPArotation)
resfa <- fa(theData,
nfactors = 2,
cor = 'mixed',
rotate = "varimax",
fm="minres")
print(resfa$loadings)
print(resfa$loadings,cutoff = 0.5)
fa.diagram(resfa,main = "Resultados del EFA")
library(rio)
data=import("Data_pais.xlsx")
#Formato de las variables.
data$codigo=NULL
base <- na.omit(data)
dataClus=base[,c(3:8)]
row.names(dataClus)=base$asociados
library(cluster)
g.dist = daisy(dataClus, metric="gower")
#utilizando PAM
library(factoextra)
set.seed(123)
res.pam=pam(g.dist,10,cluster.only = F)
#nueva columna
dataClus$pam=res.pam$cluster
# ver
fviz_silhouette(res.pam,print.summary = F)
set.seed(123)
library(factoextra)
res.agnes<- hcut(g.dist, k = 10,hc_func='agnes',hc_method = "ward.D")
dataClus$agnes=res.agnes$cluster
#head(dataClus,15)
fviz_silhouette(res.agnes, print.summary = FALSE)
set.seed(123)
res.diana <- hcut(g.dist, k = 2,hc_func='diana')
dataClus$diana=res.diana$cluster
fviz_dend(res.diana, cex = 0.4, horiz = F, main = "DENDOGRAMA DE EXPORTACIONES CHINAS AL MUNDO")
fviz_silhouette(res.diana,print.summary = F)
silDIANA=data.frame(res.diana$silinfo$widths)
silDIANA$country=row.names(silDIANA)
poorDIANA=silDIANA[silDIANA$sil_width<0,'asociados']#%>%sort()
aggregate(.~ diana, data=dataClus,mean)
library(rio)
data=import("Data_pais.xlsx")
base <- na.omit(data)
modelo1<-lm(export~corrupcion+tlc+patentes+ apec+ reg_pol , base)
library(modelsummary)
model1=list('exportaciones (I)'=modelo1)
modelsummary(model1,title = "Regresion de Gauss",
stars = TRUE,
cutput="kableExtra")
